#define FRONT 0
#define BACK 0xffffffff
#define LEFT 0
#define RIGHT 0xffffffff

void set_motor(unsigned long duty, unsigned dir, int e){
	motor_setting(duty&dir, duty&(~dir), ecorn[e]->motor.period,
		ecorn[e]->motor.enable, ecorn[e]->motor.motor_d);
	ecorn[e]->motor.duty = duty;
	ecorn[e]->motor.dir = dir;
}

void set_servo(unsigned long duty, unsigned dir, int e){
	motor_setting(duty&dir, duty&(~dir), ecorn[e]->motor.period,
		ecorn[e]->motor.enable, ecorn[e]->motor.motor_d);
	ecorn[e]->servo.duty = duty;
	ecorn[e]->servo.dir = dir;
}

void init(unsigned long period, unsigned long enable, unsigned long motor_d){
	motor_setting(0, 0, period, enable, motor_d);
}

#define init(period, enable, motor_d) \
	motor_setting(0, 0, (period), (enable), (motor_d))

struct MOTOR{
// Variables
	// Dynamic
	unsigned long duty;
	unsigned long dir;
	unsigned long duty_tmp;
	unsigned long dir_tmp;

        // Seldomly changed
	unsigned long enable;

	// Constant, must be set in definition
	const unsigned long frontORleft; // = 0
	const unsigned long backORright; // = 0xffffffff
	const unsigned long motor_d;
	const unsigned long period;
};

struct E_CORNER{
	struct MOTOR* const motor;
	struct MOTOR* const servo;
};


